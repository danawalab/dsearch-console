image: dcr.danawa.io/alpine-k8s

variables:
  GIT_STRATEGY: "clone"
  CI: "false"

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

build:
  stage: build
  script:
    - npm install --loglevel=error
    - npm install -g create-react-app  --loglevel=error
    - npm install customize-cra --loglevel=error
    - npm install -g react-app-rewired --loglevel=error
    - npm install -g react-dev-utils --loglevel=error
    - npm install -g react-scripts --loglevel=error
    - npm run build
    - export IMAGE="${REGISTRY}/${CI_PROJECT_TITLE}:${CI_PIPELINE_ID}"
    - echo "${IMAGE}"
    - docker build -t "${IMAGE}" .
    - docker push "${IMAGE}"


deploy:
  stage: deploy
  script:
    - export IMAGE="${REGISTRY}/${CI_PROJECT_TITLE}:${CI_PIPELINE_ID}"
    - echo "${IMAGE}"
    - kubectl patch deployment fastcatx-console -n fastcatx -p "{\"spec\":{\"template\":{\"spec\":{\"containers\":\[{\"name\":\"fastcatx-console\",\"image\":\"${IMAGE}\"}\]}}}}"
    - sleep 5
    - kubectl get pod -n fastcatx -o wide


image: dcr.danawa.io/alpine-k8s

stages:
  - install
  - build
  - deploy

cache:
  paths:
    - node_modules/


before_script:
#  - export app_version=$(grep version package.json | awk '{print $2}'|sed 's/[\",]//g')
#  - export IMAGE="${REGISTRY}/${CI_PROJECT_TITLE}:${app_version}-${CI_BUILD_ID}"
  - export IMAGE="${REGISTRY}/${CI_PROJECT_TITLE}:latest"
  - echo "${IMAGE}"

module install:
  stage: install
  when: manual
  script:
    - npm install -g yarn
    - rm -rf node_modules
    - yarn

build:
  stage: build
  script:
    - npm install -g yarn
    - yarn build
    - docker build -t "${IMAGE}" .
    - docker push "${IMAGE}"

deploy:
  stage: deploy
  cache: {}
  script:
    - kubectl patch deployment fastcatx-console -n fastcatx -p "{\"spec\":{\"template\":{\"metadata\":{\"labels\":{\"date\":\"`date +'%s'`\"}},\"spec\":{\"containers\":[{\"name\":\"fastcatx-console\",\"image\":\"${IMAGE}\"}]}}}}"
    - sleep 5
    - kubectl get pod -n fastcatx -o wide


